angular.module("starter.controllers",[]).controller("LoginCtrl",function(e,t,o,n){Parse.initialize("com.team3.parkhere","medvidobitches"),e.data={},console.log("in login controller");var a=Parse.User.current();if(null!=a){var r=a.get("userType");"parker"==r?o.go("parker.search"):o.go("owner.home")}e.login=function(){var t=""+e.data.username,a=""+e.data.password,r=document.querySelector('input[name = "loginType"]:checked');console.log(t),console.log(a);var l=document.getElementById("invalid");return null==r?void(l.innerHTML="Please select parker or owner"):(r=r.value,console.log(r),0==a.length||0==t.length?void(l.innerHTML="Please insert all fields"):(l.innerHTML="",n.email=t,n.userType=r,console.log("user object in login "+n.email),void Parse.User.logIn(t,a,{success:function(e){n.username=e.get("name"),n.phoneNumber=""+e.get("phoneNumber"),n.uniqueID=e.id,e.get("userType")!=r?l.innerHTML="You have not signed up with this user type":"parker"==r?o.go("parker.search"):"owner"==r&&o.go("owner.home")},error:function(e,t){l.innerHTML="Login failed, please try again"}})))},e.signUpClicked=function(){console.log("sign up clicked"),o.go("signUp")}}).service("user",function(){var e=this;return e={},e.username="",e.email="",e.password="",e.userType="",e.phoneNumber="",e.rating="",e.uniqueID="",e}).controller("signUpCtrl",function(e,t,o,n){e.data={},e.signUp=function(){var t=""+e.data.username,a=""+e.data.email,r=""+e.data.password,l=document.querySelector('input[name = "signUpType"]:checked');if(console.log(a),console.log(r),null==l){var s=document.getElementById("invalid");return void(s.innerHTML="Please select parker or owner")}l=l.value,console.log(l);var s=document.getElementById("invalid");if("undefined"==r||"undefined"==t||"undefined"==a)return void(s.innerHTML="Please insert all fields");if(console.log("here-1"),r.length<10||r.search(/\d/)==-1)return void(s.innerHTML="Your password must contain a number and be longer than 10 characters, please try again");s.innerHTML="";var i=new Parse.User;i.set("username",a),n.username=t,i.set("name",t),n.email=a,i.set("password",r),n.password=r,i.set("userType",l),n.userType=l,console.log("here2"),i.signUp(null,{success:function(e){n.uniqueID=e.id,"owner"==l?o.go("owner.home"):o.go("parker.search")},error:function(e,t){console.log(t.message),"invalid session token"==t.message&&(i.logOut(),s.innerHTML="Somethineg went wrong, please try again"),"UserEmailTaken"==t.message?document.getElementById("invalid")="This email already exists please try another email":s.innerHTML="Somethined went wrong, please try again"}})},e.loginClicked=function(){o.go("login")}}).controller("parkerMenuCtrl",function(e,t,o,n,a){e.search=function(){console.log("search clicked"),o.go("parker.search")},e.upcomingSpaces=function(){console.log("in upcoming spaces"),o.go("parker.upcomingSpaces")},e.cancellationPolicy=function(){o.go("parker.cancellationPolicy")},e.showLogout=function(){console.log("in show logout");var e=t.confirm({title:"Logout",template:"Are you sure you want to Logout?"});e.then(function(e){e?(console.log("You are sure"),n.hide(),a.clearCache(),a.clearHistory(),a.nextViewOptions({disableBack:!0,historyRoot:!0}),Parse.User.logOut(),o.go("login")):console.log("You are not sure")})}}).service("parkerSearch",function(){var e=this;return e.parkingSpaceList=[],e.geoPoint=new Parse.GeoPoint,e.startDate=new Date,e.startTime=new Date,e.endDate=new Date,e.endTime=new Date,e.parkingSpaceType="",e}).controller("parkerSearchCtrl",function(e,t,o,n,a,r,l,s){e.data={};var i=Parse.User.current().get("unratedSpaces"),c=[];if(null!=i){console.log("unrated spaces length: "+i.length);for(var g=0;g<i.length;g++){var u=i[g],d=new Date(u.get("Date")),p=new Date;if(console.log("curr date: "+p),console.log("exp date: "+d),console.log("curr time: "+p.getTime()),console.log("exp time: "+d.getTime()),p.getTime()>d.getTime()){if(0==c.length)c.push(u);else for(var m=0;m<c.length;m++)if(isSameSpace(u,c[m])){var f=new Date(unqiueSpaces[m].get("Date"));d.getTime()>f.getTime()&&(c[m]=u)}}else for(var m=c.length-1;m>=0;m--)isSameSpace(u,c[m])&&c.splice(m,1)}console.log("UniqueSpaces length: "+c.length);for(var g=0;g<c.length;g++){var u=c[g],v=o.show({template:'<input type="Rating" ng-model="data.rating">',title:"Please rate your experience with "+Parse.User.current().get("name"),subTitle:"Please use normal things",scope:e,buttons:[{text:"<b>Submit</b>",type:"button-positive",onTap:function(t){if(e.data.rating){var o=Number(e.data.rating);if(console.log(o),Number.isInteger(o)){if(console.log("rating is an integer"),o>=0&&o<=5)return console.log("returning rating"),o;alert("Please choose a rating from 0 - 5"),t.preventDefault()}else alert("Please rate with an integer"),t.preventDefault()}else t.preventDefault()}}]});v.then(function(e){if(e){console.log("Setting owner rating");var t=u.get("ownerEmail");Parse.Cloud.run("setOwnerRating",{rating:e,ownerEmail:t}).then(function(e){console.log("Response: "+e)})}})}for(var h=[],g=0;g<i.length;g++){for(var w=!0,m=0;m<c.length;m++)isSameSpace(i[g],c[m])&&(w=!1);w&&h.push(i[g])}Parse.User.current().set("unratedSpaces",h),Parse.User.current().save(null,{success:function(){console.log("Successfully deleted rated spaces")},error:function(){console.log("Failed to delete rated spaces :(")}})}var D=null,T=null;e.search="Change address";var y=document.getElementById("searchTextBox").value,S={timeout:1e5,enableHighAccuracy:!1};e.data={},e.data.currLoc=!0,t.getCurrentPosition(S).then(function(t){D=t.coords.latitude,console.log(D),T=t.coords.longitude,e.data.currLoc=!1}),e.showCurrLoc=function(){console.log("in curr loc");var t=o.confirm({title:"Current Location",template:"Can ParkHere use your current location?"});t.then(function(t){t&&(y=D+" "+T,e.search=y,console.log(y),document.getElementById("searchTextBox").value=y)}),console.log(D)},function(e){console.log("Could not get location")},e.countryCode="US",e.onAddressSelection=function(e){y=e.formatted_address,document.getElementById("searchTextBox").value=y};var k,P,b,H,M=0;e.openTimePicker=function(){var e=[],t={callback:function(e){k=new Date(e),l.startDate=k,console.log("Return value from the datepicker popup is : "+e,new Date(e)),a.openTimePicker(n)},from:new Date,inputDate:new Date,mondayFirst:!0,setLabel:"Set Start Date"};r.openDatePicker(t),console.log("Open timepicker");var n={callback:function(e){if("undefined"==typeof e)console.log("Time not selected");else{P=new Date(1e3*e),l.startTime=P;var t={callback:function(e){b=new Date(e),l.endDate=b,console.log("Return value from the datepicker popup is : "+e,new Date(e)),a.openTimePicker(s)},from:k,inputDate:k,mondayFirst:!0,setLabel:"Set End Date"};r.openDatePicker(t)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set Start Time"},s={callback:function(t){if("undefined"==typeof t)console.log("Time not selected");else{if(H=new Date(1e3*t),l.endTime=H,P.getUTCMinutes()<10)var n="0"+P.getUTCMinutes();else var n=P.getUTCMinutes();if(H.getUTCMinutes()<10)var a="0"+H.getUTCMinutes();else var a=H.getUTCMinutes();var r=document.getElementById("spaceSearchTimeList");if(k.setHours(k.getHours()+P.getHours()),b.setHours(b.getHours()+H.getHours()),console.log(k+" end "+b),b<=k){o.alert({title:"Your end date and time must be after your start"});return}M+=1;var s=k.getMonth()+1+"/"+k.getDate()+"/"+k.getFullYear(),i=b.getMonth()+1+"/"+b.getDate()+"/"+b.getFullYear();r.innerHTML+='<ion-item class="item-thumbnail-left"> <h4>Timeslot: '+M+"</h4> <p>Start: "+s+" "+P.getUTCHours()+":"+n+"</p> <p>End: "+i+" "+H.getUTCHours()+":"+a+"</p></ion-item>";var c={startDate:k,startTime:P.getUTCHours(),endDate:b,endTime:H.getUTCHours()};e.push(c),console.log(e)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set End Time"}},e.data2={},e.findParkingSpaces=function(){var t=document.getElementById("searchTextBox").value,o=e.data2.searchType;null==o&&(o="All"),l.parkingSpaceType=o;var a,r,s=new google.maps.Geocoder;if(null==o||null==k||null==P||null==b||null==t||null==H)return void(document.getElementById("invalid").innerHTML="Please insert all fields");console.log("start date = "+(k.getMonth()+1)+"/"+k.getDate()+"/"+k.getFullYear()),console.log("start time = "+P.getUTCHours()),console.log("end date = "+(b.getMonth()+1)+"/"+b.getDate()+"/"+b.getFullYear()),console.log("end time = "+H.getUTCHours()),console.log("address = "+t),console.log("parking space type = "+o);var i=document.getElementById("invalid");s.geocode({address:t},function(e,t){if(t==google.maps.GeocoderStatus.OK){a=e[0].geometry.location.lat(),r=e[0].geometry.location.lng(),console.log("lat = "+a),console.log("longitude = "+r);var o=new Parse.GeoPoint({latitude:a,longitude:r});l.geoPoint=o,console.log("geoPoint: "+o);var s=Parse.Object.extend("ParkingSpace"),c=new Parse.Query(s);c.withinMiles("location",o,3),console.log("do i get here? right before query.find"),c.find({success:function(e){console.log("Total: "+e.length),l.parkingSpaceList=e,n.go("parker.parkingSearchResults")},error:function(e){alert("Error when getting objects!")}})}else console.log("geo error "+t),i.innerHTML="Something went wrong, please try again"})}}).service("parkerSearchResults",function(){var e=this;return e.viableSpaces=[],e.selectedSpace=new Parse.Object.extend("ParkingSpace"),e}).controller("parkingSearchResultsCtrl",function(e,t,o,n,a){console.log("in parking search results!");for(var r=[],l=0;l<n.parkingSpaceList.length;l++){var s=n.parkingSpaceList[l].get("Date");if((n.parkingSpaceList[l].get("type")==n.parkingSpaceType||"All"==n.parkingSpaceType)&&s.getMonth()+1>=n.startDate.getMonth()+1&&s.getDate()>=n.startDate.getDate()&&s.getFullYear()>=n.startDate.getFullYear()&&s.getMonth()+1<=n.endDate.getMonth()+1&&s.getDate()<=n.endDate.getDate()&&s.getFullYear()<=n.endDate.getFullYear()){if(s.getMonth()+1==n.startDate.getMonth()+1&&s.getDate()==n.startDate.getDate()&&s.getFullYear()==n.startDate.getFullYear()&&n.parkingSpaceList[l].get("Hour")<n.startTime.getUTCHours())continue;if(s.getMonth()+1==n.endDate.getMonth()+1&&s.getDate()==n.endDate.getDate()&&s.getFullYear()==n.endDate.getFullYear()&&n.parkingSpaceList[l].get("Hour")>n.endTime.getUTCHours())continue;r.push(n.parkingSpaceList[l])}}console.log("viable spaces filled, size : "+r.length),a.viableSpaces=r,0==r.length&&(document.getElementById("noResults").innerHTML="No results matched your search"),e.parkingSpaces=[];for(var i=!0,l=0;l<r.length;l++){i=!0;for(var c=0;c<e.parkingSpaces.length;c++)r[l].get("ownerEmail")==e.parkingSpaces[c].get("ownerEmail")&&r[l].get("address")==e.parkingSpaces[c].get("address")&&(i=!1);if(i){var g=n.geoPoint.milesTo(r[l].get("location")).toFixed(2);r[l].set("distance",g),e.parkingSpaces.push(r[l])}}e.itemClicked=function(e){a.selectedSpace=e,o.go("parker.reservation")}}).controller("ownerPageProfileCtrl",function(e,t,o,n){console.log(n),null!=n.phoneNumber&&"undefined"!==n.phoneNumber||(console.log("bad phone number"),n.phoneNumber=""),e.user={},e.user.name=Parse.User.current().get("name"),e.user.email=Parse.User.current().get("username"),e.user.phoneNumber=Parse.User.current().get("phoneNumber"),console.log(Parse.User.current().get("picture")),"undefined"==Parse.User.current().get("picture")||null==Parse.User.current().get("picture")?e.user.url="":e.user.url=Parse.User.current().get("picture")._url;var a=Parse.User.current().get("sumRatings");console.log(a);var r,l=Parse.User.current().get("numRatings");r=null==a||null==l?0:parseInt(a/l),console.log(r),e.ratingsObject={iconOn:"ion-ios-star",iconOff:"ion-ios-star-outline",iconOnColor:"rgb(251, 212, 1)",iconOffColor:"rgb(224, 224, 224)",rating:r,minRating:0,readOnly:!0,callback:function(t){e.ratingsCallback(t)}};new ImageUploader;e.file={},e.ownerData={},e.ratingsCallback=function(e){console.log("Selected rating is : ",e)},e.updateOwner=function(){var t=Parse.User.current();console.log("in update owner"),console.log(e.ownerData.name),null!=e.ownerData.name&&(n.username=e.ownerData.name,t.set("name",e.ownerData.name)),null!=e.ownerData.phoneNumber&&(n.phoneNumber=e.ownerData.phoneNumber,t.set("phoneNumber",e.ownerData.phoneNumber));var o=document.getElementById("fileUpload").files[0];if(console.log(o),null!=o&&"undefined"!=o){var a=new Parse.File("image",o);a.save(),t.set("picture",a)}t.save(null,{success:function(e){console.log("in update owner success"),document.getElementById("invalidOwner").innerHTML="Profile updated"},error:function(e,t){document.getElementById("invalidOwner").innerHTML="Something went wrong please try again"}}),e.user.url=Parse.User.current().get("picture")._url}}).service("reservationInfo",function(){var e=this;return e.price="",e.name="",e.reserved=[],e}).controller("reservationCtrl",function(e,t,o,n,a,r){e.selectedSpace=n.selectedSpace,e.reservation={},e.reservation[!1]="Available",e.reservation[!0]="Reserved",e.colors={},e.colors[!1]="#008000",e.colors[!0]="#ff0000",availableTimes=[];for(var l=0;l<n.viableSpaces.length;l++)if(n.viableSpaces[l].get("ownerEmail")==n.selectedSpace.get("ownerEmail")&&n.viableSpaces[l].get("address")==n.selectedSpace.get("address")){var s=n.viableSpaces[l].get("Date"),i=s.getMonth()+1+"/"+s.getDate()+"/"+s.getFullYear();n.viableSpaces[l].set("PrettyDate",i),availableTimes.push(n.viableSpaces[l])}availableTimes.sort(function(e,t){var o=e.get("Date"),n=t.get("Date");return o.getMonth()+1==n.getMonth()+1&&o.getDate()==n.getDate()&&o.getFullYear()==n.getFullYear()?e.get("Hour")-t.get("Hour"):o-n}),e.availableTimes=availableTimes,console.log("in reservation page!"),e.seeOwnerPage=function(){o.go("parker.spotOwnerInformation")},e.reservationButtonClick=function(){for(var l=[],s=!0,i=0;i<e.availableTimes.length;i++)if(1==e.availableTimes[i].checked){if(1==e.availableTimes[i].get("reserved")){s=!1,console.log("setReservation set to false!");t.alert({title:"Please only select spots that are unreserved"});break}l.push(i)}if(0==l.length&&s){t.alert({title:"Please select the times you would like to reserve below"})}if(console.log(a.email),s&&0!=l.length){var c=n.selectedSpace.get("price");r.name=n.selectedSpace.get("name"),r.price=c*l.length;for(var g=[],i=0;i<l.length;i++)g.push(e.availableTimes[l[i]]);r.reservedSpaces=g,console.log("price is "+r.price),o.go("parker.pay")}}}).controller("upcomingSpacesCtrl",function(e,t,o,n){console.log("inside upcoming with user: "+n.email+" password: "+n.password),e.listCanSwipe=!0;var a=Parse.Object.extend("ParkingSpace"),r=new Parse.Query(a);r.equalTo("parker",n.email),console.log("username: "+n.email),r.ascending("Date"),r.find({success:function(t){e.spaces=t}}),e.delete=function(o){console.log("This item was deleted: "+o.get("address")+"!");var n=new Date;o.get("Date")-n;console.log("now date: "+n),console.log("subtracted date: "+o.get("Date"));var a=Math.abs(o.get("Date").valueOf()-n.valueOf())/36e5/24;if(console.log("date difference: "+a),a<2){t.alert({title:"Cannot unregister from this space.",template:"You can't unregister from a spot that you reserved for less than 2 days from now."})}var r=t.confirm({title:"Unreserve",template:"Are you sure you want to remove this parking space?"});r.then(function(n){if(n){o.set("parker",""),o.save();var a=t.alert({title:"Your account will be refunded."});a.then(function(){e.spaces.splice(e.spaces.indexOf(o),1)})}})}}).controller("spotOwnerInformationCtrl",function(e,t,o,n){console.log("in spot control page!");var a,r=n.selectedSpace.get("ownerEmail");console.log("owner email = "+r);var l=Parse.Object.extend("User"),s=new Parse.Query(l);s.equalTo("username",r),s.find({success:function(t){console.log("results: (should just be one) "+t),e.owner=t[0];var o=t[0].get("sumRatings"),n=t[0].get("numRatings");a=null==o||null==n?0:parseInt(o/n),console.log(a)}}),e.ratingsObject={iconOn:"ion-ios-star",iconOff:"ion-ios-star-outline",iconOnColor:"rgb(251, 212, 1)",iconOffColor:"rgb(224, 224, 224)",rating:a,minRating:0,readOnly:!0,callback:function(t){e.ratingsCallback(t)}}}).controller("ownerPayCtrl",function(e,t,o,n,a,r){console.log("in owner payment"),Parse.Cloud.run("payRequest",{success:function(e){console.log("success: "+e)},error:function(e){console.log("error: "+e)}})}).controller("parkerPayCtrl",function(e,t,o,n,a,r){var l=a.price,s=a.name;e.ProductMeta={title:s,priceUSD:l},e.status={loading:!1,message:""},e.charge=function(){function t(t){e.status.message="Processing your payment...",n.chargeUser(t,e.ProductMeta).then(function(t){if(t.hasOwnProperty("id")){e.status.message="Success! Check your Stripe Account",console.log("Successful charge!");var o=a.reservedSpaces;console.log(a.reservedSpaces.length);for(var n=0;n<o.length;n++)console.log("setting reserved"),console.log(o[n].get("reserved")),o[n].set("reserved",!0),o[n].set("parker",Parse.User.current().get("username")),o[n].save(null,{success:function(e){console.log("Successful saving AFTER payment")},error:function(e,t){console.log("ERROR saving parking spaces :(")}});if(o.length>0){var r=Parse.User.current().get("unratedSpaces");null!=r?(r=r.concat(o),Parse.User.current().set("unratedSpaces",r)):Parse.User.current().set("unratedSpaces",o),Parse.User.current().save(null,{success:function(e){console.log("Successful saving user unrated space")},error:function(e,t){console.log("ERROR saving user unrated spaces")}})}}else e.status.message="Error, check your console";e.status.loading=!1,console.log(t)},function(t){console.log(t),e.status.loading=!1,e.status.message="Oops... something went wrong"})}e.status.loading=!0,e.status.message="Retrieving your Stripe Token...",n.getStripeToken(e.ProductMeta).then(function(e){t(e)},function(t){console.log(t),e.status.loading=!1,"ERROR_CANCEL"!=t?e.status.message="Oops... something went wrong":e.status.message=""})}}).controller("ownerMenuCtrl",function(e,t,o,n,a,r){t.showBackButton(!1),e.showLogout=function(){console.log("in show logout");var e=o.confirm({title:"Logout",template:"Are you sure you want to Logout?"});e.then(function(e){e?(console.log("You are sure"),a.hide(),r.clearCache(),r.clearHistory(),r.nextViewOptions({disableBack:!0,historyRoot:!0}),Parse.User.logOut(),n.go("login")):console.log("You are not sure")})}}).controller("UploadController",function(e){var t=new ImageUpload;e.file={},e.upload=function(){t.push(e.file,function(t){console.log("File uploaded Successfully",e.file,t),e.uploadUri=t.url,e.$digest()})}}).service("parkingSpace",function(){var e=this;return e={},e.title="",e.price="",e.parkerName="",e.parkerContactInfo="",e.url="",e.address="",e.notes="",e.uniqueID="",e.ownerEmail="",e.type="",e}).controller("ownerHomeCtrl",function(e,t,o,n,a,r){t.showBackButton(!1);var l=r.email;e.items=[];var s=new Set,i=new Date;i.setHours(0,0,0,0);var c=Parse.Object.extend("ParkingSpace"),g=new Parse.Query(c);g.equalTo("ownerEmail",l),g.greaterThanOrEqualTo("Date",i),g.ascending("Date"),g.find({success:function(t){console.log("owner home "+t);for(var o=0;o<t.length;o++){var n=t[o].id,a=new Parse.Query(c);a.get(n,{success:function(t){if(!s.has(t.get("name"))){console.log(t),s.add(t.get("name")),console.log("in get obj "+t.id);var n={id:o,name:t.get("name"),price:t.get("price"),image:t.get("picture")._url,uniqueID:t.id,email:r.email};console.log("dict "+n),e.$apply(function(){e.items.push(n)}),console.log("scope items "+e.items),console.log(e.items)}},error:function(e,t){}})}}}),e.onItemDelete=function(t){function n(){var n=o.confirm({title:"Delete "+t.name,template:"Are you sure you want to delete "+t.name+"?"});n.then(function(o){if(o){console.log(t.name+" "+t.email);var n=new Parse.Query(c);n.equalTo("name",t.name),n.equalTo("ownerEmail",t.email);var a=new Date;a.setHours(0,0,0,0),n.greaterThanOrEqualTo("Date",a),n.find({success:function(e){console.log("found some spaces"),console.log(e);for(var t=0;t<e.length;t++)e[t].destroy({success:function(e){},error:function(e,t){console.log("delete error: "+t)}})},error:function(e,t){console.log("find error: "+t)}}),e.items.splice(e.items.indexOf(t),1)}else console.log("You are not sure delete "+t.name)})}console.log(t),console.log("^item"),console.log(a);var r=new Parse.Query(c);r.equalTo("name",t.name),r.equalTo("ownerEmail",t.email);var l=new Date;l.setHours(0,0,0,0),r.greaterThanOrEqualTo("Date",l),r.equalTo("reserved",!0),r.find({success:function(e){if(e.length>0){o.alert({title:"You cannot delete as parkers have reserved this space"})}else n()}})},e.edit=function(e){console.log("edit item returned",e),a.title=e.name,a.price=e.price,a.uniqueID=e.uniqueID,a.ownerEmail=l,console.log("in edit function",a.title),n.go("owner.spaceInfo")}}).controller("ownerAddSpaceOptionsCtrl",function(e,t,o,n,a,r){var l=r.email;e.items=[];var s=new Set,i=new Date;i.setHours(0,0,0,0);var c=Parse.Object.extend("ParkingSpace"),g=new Parse.Query(c);g.equalTo("ownerEmail",l),g.greaterThanOrEqualTo("Date",i),g.ascending("Date"),g.find({success:function(t){console.log("owner home "+t);for(var o=0;o<t.length;o++){var n=t[o].id,a=new Parse.Query(c);a.get(n,{success:function(t){if(!s.has(t.get("name"))){console.log(t),s.add(t.get("name")),console.log("in get obj "+t.id);var n={id:o,name:t.get("name"),price:t.get("price"),image:t.get("picture")._url,uniqueID:t.id,email:r.email};console.log("dict "+n),e.$apply(function(){e.items.push(n)}),console.log("scope items "+e.items),console.log(e.items)}},error:function(e,t){}})}}}),e.edit=function(e){console.log("edit item returned",e),a.title=e.name,a.price=e.price,a.uniqueID=e.uniqueID,a.ownerEmail=l,console.log("in edit function",a.title),n.go("owner.spaceInfo")},e.addNewSpace=function(){n.go("owner.addSpace")}}).controller("ownerSpaceInfoCtrl",function(e,t,o,n,a,r,l,s,i){e.parkingSpace=a,e.space={},console.log("in owner space id "+a.uniqueID);var c=Parse.Object.extend("ParkingSpace"),g=new Parse.Query(c);console.log(a.uniqueID),g.get(a.uniqueID,{success:function(e){console.log(e),a.notes=e.get("notes"),a.url=e.get("picture")._url,a.type=e.get("type"),console.log("parking space pic in obj"+a.url),a.address=e.get("address")},error:function(e,t){console.log("find error: "+t)}});var u,d,p,m,f=0,v=[];e.openTimePicker=function(){var e={callback:function(e){u=new Date(e),console.log("Return value from the datepicker popup is : "+e,new Date(e)),s.openTimePicker(o)},from:new Date,inputDate:new Date,mondayFirst:!0,setLabel:"Set Start Date"};l.openDatePicker(e),console.log("Open timepicker");var o={callback:function(e){if("undefined"==typeof e)console.log("Time not selected");else{d=new Date(1e3*e);var t={callback:function(e){p=new Date(e),console.log("Return value from the datepicker popup is : "+e,new Date(e)),s.openTimePicker(n)},from:u,inputDate:u,mondayFirst:!0,setLabel:"Set End Date"};l.openDatePicker(t)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set Start Time"},n={callback:function(e){if("undefined"==typeof e)console.log("Time not selected");else{if(m=new Date(1e3*e),d.getUTCMinutes()<10)var o="0"+d.getUTCMinutes();else var o=d.getUTCMinutes();if(m.getUTCMinutes()<10)var n="0"+m.getUTCMinutes();else var n=m.getUTCMinutes();var a=document.getElementById("addSpaceList");if(u.setHours(u.getHours()+d.getHours()),p.setHours(p.getHours()+m.getHours()),console.log(u+" end "+p),p<=u){t.alert({title:"Your end date and time must be after your start"});return}f+=1;var r=u.getMonth()+1+"/"+u.getDate()+"/"+u.getFullYear(),l=p.getMonth()+1+"/"+p.getDate()+"/"+p.getFullYear();a.innerHTML+='<ion-item class="item-thumbnail-left"> <h4>Timeslot: '+f+"</h4> <p>Start: "+r+" "+d.getUTCHours()+":"+o+"</p> <p>End: "+l+" "+m.getUTCHours()+":"+n+"</p></ion-item>";var s={startDate:u,startTime:d.getUTCHours(),endDate:p,endTime:m.getUTCHours()};v.push(s),console.log(v)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set End Time"}};var h;e.updateSpace=function(){function t(e,t){return console.log("in same date"),e.getDate()==t.getDate()&&e.getMonth()==t.getMonth()&&e.getFullYear()==t.getFullYear()?(console.log("returning true"),!0):(console.log("returning false"),!1)}function o(e,t){console.log("in saveSpace"),console.log(h),console.log(e);var o=new c;o.set("Date",new Date(e)),console.log(e);var n=Parse.User.current();console.log(n),o.set("ownerEmail",n.get("username")),o.set("name",h.get("name")),o.set("location",h.get("location")),o.set("picture",h.get("picture")),o.set("price",p),o.set("type",h.get("type")),o.set("notes",h.get("notes")),o.set("Hour",t),o.set("address",h.get("address")),o.set("parker",""),o.set("reserved",!1),console.log("set everything"),o.save(null,{success:function(e){console.log("space save success"),document.getElementById("invalid2").innerHTML="Space successfully uploaded",document.getElementById("addSpaceList").innerHTML=""},error:function(e,t){console.log("space save failure"),console.log(t),document.getElementById("invalid2").innerHTML="Failed to update space. Please try again"}})}function n(){console.log("in add more spaces");for(var e=0;e<v.length;e++){var n=v[e];if(console.log(n),t(n.startDate,n.endDate))for(var a=n.startTime;a<=n.endTime;a++)console.log("saving date"),console.log(n.startDate),o(n.startDate,a);else for(var r=n.startDate;r<=n.endDate;r.setDate(r.getDate()+1))if(t(r,n.startDate))for(var a=n.startTime;a<=24;a++)console.log("saving date"),console.log(n.startDate),o(n.startDate,a);else if(t(r,n.endDate))for(var a=0;a<=n.endTime;a++)console.log("saving date"),console.log(n.endDate),o(n.endDate,a);else for(var a=0;a<=24;a++)console.log("saving date"),console.log(r),o(r,a)}}for(var r=document.querySelectorAll("input[name=timeCheck]:checked"),l=0;l<r.length;l++){console.log(r[l]);var s=new Date(r[l].getAttribute("data-date"));console.log(s);var i=parseInt(r[l].getAttribute("data-hour"));console.log(i);var g=new Parse.Query(c);g.equalTo("name",a.title),console.log(a.title),console.log(a.ownerEmail),g.equalTo("ownerEmail",a.ownerEmail),g.equalTo("Date",s),g.equalTo("Hour",i),console.log(g),g.find({success:function(e){console.log(e[0]),e[0].destroy({})}})}document.getElementById("timeSlots").innerHTML="",console.log("in update price");var u=new Parse.Query(c);u.equalTo("name",a.title),u.equalTo("ownerEmail",a.ownerEmail);var d=new Date;d.setHours(0,0,0,0),u.greaterThanOrEqualTo("Date",d),u.equalTo("reserved",!1);var p;null!=e.space.price?(p=e.space.price,console.log("does not equal null"),u.find({success:function(t){h=t[0];for(var o=0;o<t.length;o++)console.log(t[o]),t[o].set("price",e.space.price),t[o].save();a.price=e.space.price,e.parkingSpace=a,document.getElementById("invalid2").innerHTML="Price updated for unreserved spaces"},error:function(e){document.getElementById("invalid2").innerHTML="Something went wrong, please try again"}})):(console.log("DOES null"),u.find({success:function(e){h=e[0],console.log(h),p=h.get("price"),n(),document.getElementById("invalid2").innerHTML="Space successfully uploaded",document.getElementById("addSpaceList").innerHTML=""},error:function(e){document.getElementById("invalid2").innerHTML="Something went wrong, please try again"}}))},e.getTimeSpaces=function(){var e=new Parse.Query(c);e.equalTo("name",a.title),e.equalTo("ownerEmail",a.ownerEmail);var t=new Date;t.setHours(0,0,0,0),e.greaterThanOrEqualTo("Date",t);var o={},n=[];availableTimes=[],e.find({success:function(e){console.log(e.length);for(var t=0;t<e.length;t++){var a=e[t].get("Date");if(console.log(a),!o[a]){o[a]=[];for(var r=0;r<=24;r++)o[a][r]=null}var l=e[t].get("Hour"),s=e[t].get("parker");0!=e[t].get("reserved")&&null!=s&&""!=s&&"undefined"!==s||(s="0"),o[a][l]=s}console.log(o);for(var i in o)n.push(i);console.log(n),n.sort();for(var c="<h4>Check timeslots you would like to delete</h4>",t=0;t<n.length;t++){c+="<h5> Hours for "+n[t].toString().split(":")[0].slice(0,-3)+":</h5>";for(var g=o[n[t]],r=0;r<g.length;r++)"0"==g[r]?c+="<input type='checkbox' name='timeCheck' data-date='"+n[t].toString().split(":")[0].slice(0,-3).substring(4)+"' data-hour='"+r+"'>"+r+":00: not reserved </br>":null!=g[r]&&(c+="<input type='checkbox' disabled readonly>"+r+":00: "+g[r]+"</br>")}console.log(c),document.getElementById("timeSlots").innerHTML=c},error:function(e){console.log("Error: "+e.code+" "+e.message)}})}}).controller("ownerAddSpaceCtrl",function(e,t,o,n,a,r,l){t.showBackButton(!1),e.data={};var s,i=[];console.log("user",l.email);var c="";e.countryCode="US",e.onAddressSelection=function(t){c=t.formatted_address,console.log(c),document.getElementById("typedAddress").value=c,e.data.address=c},e.addSpace=function(){function t(){function e(e,t){return a.startDate.getDate()==a.endDate.getDate()&&a.startDate.getMonth()==a.endDate.getMonth()&&a.startDate.getFullYear()==a.endDate.getFullYear()}var t=new Parse.File("image",s);t.save().then(function(){},function(e){m.innerHTML="File upload did not work. Please try again"});for(var n=0;n<i.length;n++){var a=i[n];if(console.log(a),e(a.startDate,a.endDate))for(var r=a.startTime;r<=a.endTime;r++)console.log("saving date"),console.log(a.startDate),o(a.startDate,r,t);else for(var l=a.startDate;l<=a.endDate;l.setDate(l.getDate()+1))if(e(l,a.startDate))for(var r=a.startTime;r<=24;r++)console.log("saving date"),console.log(a.startDate),o(a.startDate,r,t);else if(e(l,a.endDate))for(var r=0;r<=a.endTime;r++)console.log("saving date"),console.log(a.endDate),o(a.endDate,r,t);else for(var r=0;r<=24;r++)console.log("saving date"),console.log(l),o(l,r,t)}}function o(e,t,o){console.log("in saveSpace"),console.log(e);var s=new a;s.set("Date",new Date(e)),console.log(e);var i=Parse.User.current();s.set("ownerEmail",i.get("username")),s.set("name",r);var f=new Parse.GeoPoint({latitude:d,longitude:p});s.set("location",f),s.set("picture",o),s.set("price",l),s.set("type",u),s.set("notes",g),s.set("Hour",t),s.set("address",c),s.set("parker",""),s.set("reserved",!1),s.save(null,{success:function(e){m.innerHTML="Space added!",n.go("owner.home")},error:function(e,t){m.innerHTML="Failed to upload space. Please try again"}})}var a=Parse.Object.extend("ParkingSpace"),r=e.data.spaceName,l=e.data.price,g=e.data.notes,u=e.data.type;c=e.data.address;var d=0,p=0;s=document.getElementById("fileUpload").files[0],console.log(s),console.log("type: "+u),console.log(c);var m=document.getElementById("addSpaceInvalid");if("undefined"===u||"undefined"===r||"undefined"===l||"undefined"===c)return void(m.innerHTML="Please insert all required fields");console.log(c);var f=new google.maps.Geocoder;f.geocode({address:c},function(e,o){return o!=google.maps.GeocoderStatus.OK?(console.log("geo error "+o),void(m.innerHTML="Something went wrong, please try again")):(console.log(e[0]),d=e[0].geometry.location.lat(),p=e[0].geometry.location.lng(),c=e[0].formatted_address,console.log("lat "+d+" longitude "+p+"address "+c),t(),void 0)});new Parse.GeoPoint({latitude:d,longitude:p})};new ImageUploader;e.file={};var g=0;e.openTimePicker=function(){var e,t,n,l,s={callback:function(t){e=new Date(t),e.setHours(0,0,0,0),console.log("Return value from the datepicker popup is : "+t,new Date(t)),a.openTimePicker(c)},from:new Date,inputDate:new Date,mondayFirst:!0,setLabel:"Set Start Date"};r.openDatePicker(s),console.log("Open timepicker");var c={callback:function(o){if("undefined"==typeof o)console.log("Time not selected");else{t=new Date(1e3*o);var l={callback:function(e){n=new Date(e),n.setHours(0,0,0,0),console.log("Return value from the datepicker popup is : "+e,new Date(e)),a.openTimePicker(u)},from:e,inputDate:e,mondayFirst:!0,setLabel:"Set End Date"};r.openDatePicker(l)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set Start Time"},u={callback:function(a){if("undefined"==typeof a)console.log("Time not selected");else{l=new Date(1e3*a);var r=document.getElementById("addSpaceList");if(console.log(e+" end "+n),n.getTime()==e.getTime()&&l.getUTCHours()<=t.getUTCHours()){o.alert({title:"Your end date and time must be after your start"});return}g+=1;var s=e.getMonth()+1+"/"+e.getDate()+"/"+e.getFullYear(),c=n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear();r.innerHTML+='<ion-item class="item-thumbnail-left"> <h4>Timeslot: '+g+"</h4> <p>Start: "+s+" "+t.getUTCHours()+":00 </p> <p>End: "+c+" "+l.getUTCHours()+":00 </p></ion-item>";
var u={startDate:e,startTime:t.getUTCHours(),endDate:n,endTime:l.getUTCHours()};i.push(u),console.log(i)}},inputTime:60*(new Date).getHours()*60,format:24,step:60,setLabel:"Set End Time"}}}).controller("PriorBookingsCtrl",function(e,t,o,n){var a={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(a).then(function(t){var o=new google.maps.LatLng(t.coords.latitude,t.coords.longitude),n={center:o,zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP};e.map=new google.maps.Map(document.getElementById("map"),n),google.maps.event.addListenerOnce(e.map,"idle",function(){var n="https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",a=new google.maps.Marker({map:e.map,animation:google.maps.Animation.DROP,icon:n,position:o}),r=new Parse.GeoPoint({latitude:t.coords.latitude,longitude:t.coords.longitude});console.log(r);var l=Parse.Object.extend("ParkingSpace"),s=new Parse.Query(l);s.withinMiles("location",r,3),console.log("do i get here? right before query.find"),s.find({success:function(t){console.log("Total: "+t.length);for(var o=[],a=0;a<t.length;a++){var r=t[a].get("location")._latitude,l=t[a].get("location")._longitude;console.log("newlat: "+r),console.log("newlong: "+l);for(var s=!1,i=0;i<o.length;i++)console.log("name is: "+o[i].name),console.log("other name is: "+t[a].get("name")),o[i].name==t[a].get("name")&&(console.log("names are equal"),t[a].get("reserved")&&(o[i].numReserved=parseInt(o[i].numReserved)+1),s=!0);if(!s){var c=0;t[a].get("reserved")&&(c=1),o.push({name:t[a].get("name"),latitude:r,longitude:l,numReserved:c})}console.log("at end of for loop")}for(var a=0;a<o.length;a++){console.log("lat : "+o[a].latitude);var g=new google.maps.LatLng(parseFloat(o[a].latitude),parseFloat(o[a].longitude));console.log("number of reservations: "+o[a].numReserved);var c=o[a].numReserved;switch(!0){case 0==c:n="../img/car_0.png";break;case c<5:n="../img/car_1.png";break;case c<10:n="../img/car_2.png";break;case c<20:n="../img/car_3.png";break;default:n="../img/car_4.png"}console.log("lat/long key value: "+g.latitude+" "+g.longitude);new google.maps.Marker({map:e.map,animation:google.maps.Animation.DROP,icon:n,position:g})}},error:function(e){alert("Error when getting objects!")}});var i=new google.maps.InfoWindow({content:"Current Location"});google.maps.event.addListener(a,"click",function(){i.open(e.map,a)})})},function(e){console.log("Could not get location")})}).controller("MapCtrl",function(e,t,o,n){var a={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(a).then(function(t){var o=new google.maps.LatLng(t.coords.latitude,t.coords.longitude),n={center:o,zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP};e.map=new google.maps.Map(document.getElementById("map"),n),google.maps.event.addListenerOnce(e.map,"idle",function(){var n="https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",a=new google.maps.Marker({map:e.map,animation:google.maps.Animation.DROP,icon:n,position:o}),r=new Parse.GeoPoint({latitude:t.coords.latitude,longitude:t.coords.longitude});console.log(r);var l=Parse.Object.extend("ParkingSpace"),s=new Parse.Query(l);s.withinMiles("location",r,3),console.log("do i get here? right before query.find"),s.find({success:function(t){console.log("Total: "+t.length);for(var o=new Set,n=0;n<t.length;n++)if(!o.has(t[n].get("name"))){o.add(t[n].get("name"));var a=t[n].get("location")._latitude;console.log(t[n].get("location")._latitude);var r=t[n].get("location")._longitude,l=new google.maps.LatLng(a,r);console.log(l),console.log(t[n]);new google.maps.Marker({map:e.map,animation:google.maps.Animation.DROP,position:l})}},error:function(e){alert("Error when getting objects!")}});var i=new google.maps.InfoWindow({content:"Current Location"});google.maps.event.addListener(a,"click",function(){i.open(e.map,a)})})},function(e){console.log("Could not get location")})});var isSameSpace=function(e,t){return e.get("location")==t.get("location")&&e.get("ownerEmail")==t.get("ownerEmail")};